from classes.imports import *

# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
import telebot

# –ö–Ω–æ–ø–∫–∏
class buttons:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞
    def __init__(self):
        self.btn1 = telebot.types.KeyboardButton("üí™–Ø —Ç—Ä–µ–Ω–µ—Äüí™")
        self.btn2 = telebot.types.KeyboardButton("üèÖ–Ø —Å–ø–æ—Ä—Ç—Å–º–µ–ΩüèÖ")
        self.btn3 = telebot.types.KeyboardButton("üßê–Ø –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—åüßê")
        self.btn4 = telebot.types.KeyboardButton("–ù–∞–π—Ç–∏ —Ç—Ä–µ–Ω–µ—Ä–∞")
        self.btn6 = telebot.types.KeyboardButton("–ù–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º")
        self.btn7 = telebot.types.KeyboardButton("–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö")
        self.btn8 = telebot.types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–æ—Ä—Ç–µ")
        self.btn9 = telebot.types.KeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üí™")
        self.btn10 = telebot.types.KeyboardButton("–ù–∞–π—Ç–∏ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞")
        self.btn11 = telebot.types.KeyboardButton("–ú–æ–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç—É")
        self.btn12 = telebot.types.KeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –¥—Ä—É–≥–∏—Ö")


        self.btntelegramchannel = telebot.types.InlineKeyboardButton("Kosh Sports", telegrampath)
        self.sendinformation = telebot.types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
        self.changeprofileinfo = telebot.types.KeyboardButton("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
        self.sendmessageadmin = telebot.types.InlineKeyboardButton("–ê–¥–º–∏–Ω", adminchannel)

    def retunmarkup(self, role=None, dates=None):
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        match (role):

            case "–¢—Ä–µ–Ω–µ—Ä":
                markup.add(self.btn9)
                markup.add(self.btn10)
                markup.add(self.btn7)

            case "–°–ø–æ—Ä—Ç—Å–º–µ–Ω":
                markup.add(self.btn9)
                markup.add(self.btn4)
                markup.add(self.btn6)
                markup.add(self.btn7)

            case "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª":
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(self.btntelegramchannel)

            case "–ü—Ä–æ—Ñ–∏–ª—å —Ç—Ä–µ–Ω–µ—Ä–∞":
                markup.add(self.btn10)

            case "Null":
                markup = telebot.types.ReplyKeyboardRemove()

            case "–ì–æ—Ä–æ–¥–∞" | "–¢–∏–ø —Å–ø–æ—Ä—Ç–∞":
                for elem in range(0, len(dates), 2):
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—á—ë—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
                    if len(dates) % 2 == 1:
                        if elem == (len(dates) // 2) * 2:
                            button = telebot.types.KeyboardButton(dates[elem])
                            markup.add(button)
                        else:
                            button1 = telebot.types.KeyboardButton(dates[elem])
                            button2 = telebot.types.KeyboardButton(dates[elem+1])
                            markup.add(button1, button2)
                    else:
                        button1 = telebot.types.KeyboardButton(dates[elem])
                        button2 = telebot.types.KeyboardButton(dates[elem + 1])
                        markup.add(button1, button2)
                markup.add(self.btn11)

            case "–£—Ä–æ–≤–µ–Ω—å" | "–ú–µ—Å—Ç–∞" | "–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞":
                for elem in dates:
                    markup.add(elem)

            case "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä":
                markup.add(self.sendinformation)

            case "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
                markup.add(self.btn12)
                markup.add(self.changeprofileinfo)

            case "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö":
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(self.btntelegramchannel)

            case _:
                markup.add(self.btn1)
                markup.add(self.btn2)
                markup.add(self.btn3)
        return markup